#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        left_sqt_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        right_sqt_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <4 5>;
        };

        left_p {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <23 24>;
        };

        l_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE          &kp Q  &kp W  &kp E     &kp R  &kp T                                    &kp UP                &kp Y                  &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT TAB  &kp A  &kp S  &kp D     &kp F  &kp G                          &kp LEFT  &kp ENTER  &kp RIGHT  &kp H                  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT      &kp Z  &kp X  &kp C     &kp V  &kp B            &kp C_MUTE              &kp DOWN              &kp N                  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp TILDE
                                  &kp LGUI  &mo 1  &mt LCTRL SPACE                                                &mt RIGHT_SHIFT ENTER  &mo 2  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0  &kp BSPC
&trans     &trans           &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &trans  &trans
&trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans
                                            &trans        &trans        &trans                                                                          &trans           &mo 3            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans        &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS   &kp MINUS  &kp EQUAL  &trans    &kp BSLH  &kp PIPE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp SLASH  &trans     &trans    &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6      &kp F7        &kp F8        &kp F9      &kp F10         &kp F11
&trans          &bt BT_CLR  &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans      &trans          &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans      &trans        &bootloader   &sys_reset  &kp SCROLLLOCK  &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans      &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
